man(Artem).
man(Egor).
man(Daniil).
man(Sultan).
man(Valentin).
man(Alexey).
man(Artur).
man(Kirill).
man(Ivan).
man(Anton).
man(Andrei).
man(Arseniy).
man(Valera).

woman(Olga).
woman(Kristina).
woman(Katya).
woman(Valentina).
woman(Svetlana).
woman(Rita).
woman(Eleonora).
woman(Polina).
woman(Tatyana).
woman(Anna).
woman(Nastya).
woman(Natasha).
woman(Veronika).

parent(Artem,Egor).
parent(Artem,Daniil).
parent(Artem,Sultan).
parent(Artem,Valentin).

parent(Kristina,Egor).
parent(Kristina,Daniil).
parent(Kristina,Sultan).
parent(Kristina,Valentin).

parent(Alexey,Kirill).
parent(Alexey,Tatyana).
parent(Eleonora,Kirill).
parent(Eleonora,Tatyana).

parent(Ivan,Anton).
parent(Ivan,Polina).
parent(Anna,Anton).
parent(Anna,Polina).

parent(Andrei,Rita).
parent(Andrei,Svetlana).
parent(Katya,Rita).
parent(Katya,Svetlana).

parent(Arseniy,Nastya).
parent(Arseniy,Valera).
parent(Natasha,Nastya).
parent(Natasha,Valera).

man:-man(X),print(X),nl,fail.
woman:- woman(X),print(X),nl,fail.

/* Task 11*/
/*Вариант № 3. Построить предикат daughter(X, Y), который проверяет,
является ли X дочерью Y. Построить предикат, daughter(X), который
выводит дочь X.*/

daughter(X):- parent(X,Y),woman(Y),write(Y),nl,fail.
daughter(X,Y):- woman(X),parent(Y,X).
